"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8572],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),f=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=f(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=f(a),p=s,g=d["".concat(l,".").concat(p)]||d[p]||u[p]||i;return a?n.createElement(g,r(r({ref:t},c),{},{components:a})):n.createElement(g,r({ref:t},c))}));function g(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,r=new Array(i);r[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:s,r[1]=o;for(var f=2;f<i;f++)r[f]=a[f];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},9661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>f});var n=a(7462),s=(a(7294),a(3905));const i={sidebar_position:5,description:"scaffolding your unit tests"},r="Scaffolding Tests \ud83e\uddea",o={unversionedId:"static-scaffolding/scaffolding-tests",id:"static-scaffolding/scaffolding-tests",title:"Scaffolding Tests \ud83e\uddea",description:"scaffolding your unit tests",source:"@site/docs/static-scaffolding/scaffolding-tests.md",sourceDirName:"static-scaffolding",slug:"/static-scaffolding/scaffolding-tests",permalink:"/docs/static-scaffolding/scaffolding-tests",draft:!1,editUrl:"https://github.com/scaffoldinghub-dev/scaffoldinghub-dev.github.io/tree/main/docs/static-scaffolding/scaffolding-tests.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"scaffolding your unit tests"},sidebar:"tutorialSidebar",previous:{title:"Generating options \ud83d\udd27",permalink:"/docs/static-scaffolding/generating-options"},next:{title:"Scaffolding Home View \ud83c\udfe0",permalink:"/docs/static-scaffolding/scaffolding-home"}},l={},f=[],c={toc:f};function d(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"scaffolding-tests-"},"Scaffolding Tests \ud83e\uddea"),(0,s.kt)("p",null,"One of the most interesting and time-saving elements of scaffolding is generating the unit tests to achive 100% coverage. This provide a great set of ",(0,s.kt)("em",{parentName:"p"},"boiler plate")," examples to borrow from as you evolve your application away from the initial scaffold. "),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/sjhorn/mason_bricks/scaffolding_test"},"scaffolding_test")," is a option mason brick that is called when the option ",(0,s.kt)("inlineCode",{parentName:"p"},"--generate-tests")," is true. "),(0,s.kt)("p",null,"To allow these unit test to work with our flutter project we have 2 exra dependencies - ",(0,s.kt)("inlineCode",{parentName:"p"},"bloc_test")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"mocktail"),". Add those to the project as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"flutter pub add mocktail bloc_test --dev\n")),(0,s.kt)("p",null,"To continue with the previous example, lets add unit tests and use the command parameters to do this. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'mason make scaffolding --package static_scaffolding_sample --feature feature1 \\\n    --properties "String firstname=Your first name, String lastname=Your suranme, bool registered=false" \\\n    --generate-tests true --generate-home true\n\n')),(0,s.kt)("p",null,"Running this you will see a similar output to the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"You have the following properties: [{name: firstname, type: String, defaultValue: 'Your first name', emptyValue: '', testValue: 'testString'}, {name: lastname, type: String, defaultValue: 'Your suranme', emptyValue: '', testValue: 'testString'}, {name: registered, type: bool, defaultValue: false, emptyValue: false, testValue: true}]\n\u2713 Made brick scaffolding (0.1s)\n\u2713 Generated 15 file(s):\n  .../static_scaffolding_sample/lib/features/feature1/feature1.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/data/feature1_repository_impl.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/data/feature1_model.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/domain/feature1_repository.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/domain/feature1.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/views/feature1_edit_view.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/views/feature1_read_view.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/widgets/feature1_widget.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_event.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_bloc.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_state.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_event.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_bloc.dart (identical)\n  .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_state.dart (identical)\n  .../static_scaffolding_sample/lib/shared/presentation/list_table.dart (identical)\n\u2713 Compiled post_gen.dart (2.4s)\n\u2713 Running brick scaffolding_home (0.7s)\n\u2713 Generated 2 file(s):\n  .../static_scaffolding_sample/lib/main.dart (identical)\n  .../static_scaffolding_sample/lib/scaffold_app.dart (identical)\n\u2713 Running brick scaffolding_test (0.7s)\n\u2713 Generated 8 file(s):\n  .../static_scaffolding_sample/test/features/feature1/data/feature1_repository_impl_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/data/feature1_model_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/domain/feature1_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/presentation/views/feature1_read_view_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/presentation/views/feature1_edit_view_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/presentation/widgets/feature1_widget_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/presentation/bloc/feature1_read_bloc_test.dart (new)\n  .../static_scaffolding_sample/test/features/feature1/presentation/bloc/feature1_edit_bloc_test.dart (new)\n\u2713 Running brick scaffolding_home_test (0.6s)\n\u2713 Generated 1 file:\n  .../static_scaffolding_sample/test/scaffold_app_test.dart (new)\n\n")),(0,s.kt)("p",null,"Note the new files now created under ",(0,s.kt)("inlineCode",{parentName:"p"},"test/"),". Given we also specified to generate the home scaffold we also go the unit test for this."),(0,s.kt)("p",null,"The full list of addtional files are:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"test/\n\u251c\u2500 scaffold_app_test.dart\n\u2514\u2500 features/\n   \u2514\u2500 feature1/\n      \u251c\u2500 data/\n      \u2502  \u251c\u2500 feature1_model_test.dart\n      \u2502  \u2514\u2500 feature1_repository_impl_test.dart\n      \u251c\u2500 domain/\n      \u2502  \u2514\u2500 feature1_test.dart\n      \u2514\u2500 presentation/\n         \u251c\u2500 bloc/\n         \u2502  \u251c\u2500 feature1_edit_bloc_test.dart\n         \u2502  \u2514\u2500 feature1_read_bloc_test.dart\n         \u2514\u2500 views/\n            \u251c\u2500 feature1_edit_view_test.dart\n            \u2514\u2500 feature1_read_view_test.dart\n")),(0,s.kt)("p",null,"To show our tests in action we can run them and generate the coverage report as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"flutter test --coverage && genhtml -p ./lib -o coverage coverage/lcov.info && open coverage/index.html\n")),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Note this depends on ",(0,s.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"lcov")," "),(0,s.kt)("p",{parentName:"admonition"},"On mac this is as simple as ",(0,s.kt)("inlineCode",{parentName:"p"},"brew install lcov")," if you have install ",(0,s.kt)("a",{parentName:"p",href:"https://brew.sh"},"homebrew"))),(0,s.kt)("p",null,"The result of running this command is"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'00:10 +62: All tests passed!                                                                                                                                  \nReading data file coverage/lcov.info\nResolved relative source file path "lib/features/feature1/data/feature1_model.dart" with CWD to "/Users/shorn/dev/static_scaffolding_sample/lib/features/feature1/data/feature1_model.dart".\nFound 15 entries.\nUsing user-specified filename prefix "./lib"\nWriting .css and .png files.\nGenerating output.\nProcessing file .../static_scaffolding_sample/lib/scaffold_app.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/data/feature1_model.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/data/feature1_repository_impl.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/domain/feature1.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/domain/feature1_repository.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_event.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_bloc.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_read_state.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_event.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_state.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/bloc/feature1_edit_bloc.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/views/feature1_read_view.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/views/feature1_edit_view.dart\nProcessing file .../static_scaffolding_sample/lib/features/feature1/presentation/widgets/feature1_widget.dart\nProcessing file .../static_scaffolding_sample/lib/shared/presentation/list_table.dart\nWriting directory view page.\nOverall coverage rate:\n  lines......: 100.0% (394 of 394 lines)\n  functions..: no data found\n')),(0,s.kt)("p",null,"and the following will show in a browser window"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Test Coverage",src:a(9091).Z,width:"1324",height:"378"})),(0,s.kt)("p",null,"Congratulations \ud83e\udd73 421 lines and 100% coverage. You can edit these files to learn more about how they are unit tested and as you change the scaffold you are in a good place to consider Test Driven Development (TDD) with some great examples."))}d.isMDXComponent=!0},9091:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/test_coverage-6e693b83be8a30c100cec0f45c09d3f5.png"}}]);